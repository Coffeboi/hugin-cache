---
- name: Install Docker
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - python3-pip
    - virtualenv
    - python3-setuptools

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Ensure /etc/docker/ directory exists.
  file:
    path: /etc/docker
    state: directory
    mode: 0755
  when: docker_daemon_options.keys() | length > 0

- name: Configure Docker daemon options.
  copy:
    content: "{{ docker_daemon_options | to_nice_json }}"
    dest: /etc/docker/daemon.json
    mode: 0644
  when: docker_daemon_options.keys() | length > 0
  notify: restart docker

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: started
    enabled: true
  ignore_errors: "{{ ansible_check_mode }}"

- name: Setup Hugin Cache container
  docker_container:
    name: hugin-cache
    image: "{{ docker_image }}"
    env: {
      DATABASE_URL: "postgres://{{ vault_postgres_db_user }}:{{ vault_postgres_db_password }}@127.0.0.1:5432/{{ vault_postgres_db_name }}",
      # NODE_ENV: production # might not need this since its default set when building docker image
    }
    command: /bin/echo success
    state: present

- include_tasks: docker-users.yml
  when: docker_users | length > 0